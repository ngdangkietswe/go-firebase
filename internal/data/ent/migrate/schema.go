// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DeviceTokenColumns holds the columns for the "device_token" table.
	DeviceTokenColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "token", Type: field.TypeString, Unique: true},
		{Name: "platform", Type: field.TypeString, Default: "android"},
		{Name: "last_seen", Type: field.TypeTime},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// DeviceTokenTable holds the schema information for the "device_token" table.
	DeviceTokenTable = &schema.Table{
		Name:       "device_token",
		Columns:    DeviceTokenColumns,
		PrimaryKey: []*schema.Column{DeviceTokenColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "device_token_users_device_tokens",
				Columns:    []*schema.Column{DeviceTokenColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// NotificationColumns holds the columns for the "notification" table.
	NotificationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "body", Type: field.TypeString},
		{Name: "data", Type: field.TypeJSON, Nullable: true},
		{Name: "sent_at", Type: field.TypeTime},
		{Name: "is_read", Type: field.TypeBool, Default: false},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// NotificationTable holds the schema information for the "notification" table.
	NotificationTable = &schema.Table{
		Name:       "notification",
		Columns:    NotificationColumns,
		PrimaryKey: []*schema.Column{NotificationColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notification_users_notifications",
				Columns:    []*schema.Column{NotificationColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "firebase_uid", Type: field.TypeString, Unique: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DeviceTokenTable,
		NotificationTable,
		UsersTable,
	}
)

func init() {
	DeviceTokenTable.ForeignKeys[0].RefTable = UsersTable
	DeviceTokenTable.Annotation = &entsql.Annotation{
		Table: "device_token",
	}
	NotificationTable.ForeignKeys[0].RefTable = UsersTable
	NotificationTable.Annotation = &entsql.Annotation{
		Table: "notification",
	}
	UsersTable.Annotation = &entsql.Annotation{
		Table: "users",
	}
}
